name: Core CI

on:
  push:
    branches:
      - main
      - add-helpm8-wpf-library
  pull_request:
    branches:
      - main

env:
  DOTNET_NOLOGO: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
          - os: ubuntu-20.04
            name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'            
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          configFilePath: ./.github/GitVersion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"            
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with: 
          dotnet-version: |
            3.1.x
            6.x      
      - name: Build
        run: dotnet build src/libraries/Helpm8.Core --configuration Release  /p:Version=${{ 
          steps.gitversion.outputs.AssemblySemVer }} /p:AssemblyVersion=${{
          steps.gitversion.outputs.AssemblySemVer }} /p:InformationalVersion=${{
          steps.gitversion.outputs.InformationalVersion }} 
      - name: Run tests without coverage
        if: matrix.name == 'Linux'
        run: dotnet test src/libraries/Helpm8.Core.Tests --configuration Release -v=normal
      - name: Run tests with coverage
        if: matrix.name == 'Windows'
        run: dotnet test src/libraries/Helpm8.Core.Tests --configuration Release -v=normal /p:CollectCoverage=true /p:CoverletOutput=../../../TestResults/Helpm8.Core.info /p:CoverletOutputFormat=lcov /p:Threshold=80
      - name: Publish coverage report to coveralls.io
        if: matrix.name == 'Windows'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: TestResults/Helpm8.Core.info
      - name: Pack and publish
        if: matrix.name == 'Windows'
        run: |
          dotnet pack src/libraries/Helpm8.Core --configuration Release -o:nugets /p:PackageVersion=${{ steps.gitversion.outputs.NuGetVersion }}
          cd nugets/
          dotnet nuget push *.nupkg --source https://nuget.pkg.github.com/wiesenwischer/index.json --api-key ${{ secrets.GITHUB_TOKEN }}
          cd -
      - name: Upload packages
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
